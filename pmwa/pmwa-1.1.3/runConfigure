#!/bin/bash

#====================
#====================

#COMPILER=GNU
COMPILER=INTEL
#COMPILER=FUJITSU
PARALLEL=YES
#PARALLEL=NO # error

#MPIDIR=/usr/bin
#====================
#====================

# ++++ installation directory ++++
INSTALL_DIR=$PWD
# ++++ installation directory ++++

# ++++ current directory ++++
CURDIR=$PWD
# ++++ current directory ++++

ANNEAL = NO

# ++++ random numb ++++
#RNDNAME=boost
RNDNAME=hrd

RNDPATH= #/opt/nano/alps/boost_1_52_0


# ++++ random number ++++


# ++++ macro options ++++
#DEB=-DDEB 
NORM=-DNORM 
#MONITOR=-DMONITOR
#CHANIJOB=-DCHAINJOB
#GRAPHIC=-DGRAPHIC
#PAPI=-PAPI

# ++++ macro options ++++

# ++++ blas lapack dir ++++

# ++++ profiler option ++++
PROF=
#PROF="-pg"
# ++++ PROFILER option ++++


case $COMPILER in 
    GNU)
#	OPT="-O3 -mfpmath=sse -msse4.1 -ftree-vectorize"
#        DEBUG="-g -W -Wall -fbounds-check -ffpe-trap=zero,overflow,underflow"
	LIBS="-lblas -llapack "
	OPT="-O2"
	
	case $PARALLEL in
	    YES)
		CXX=$MPIDIR/mpic++
		CC=$MPIDIR/mpic++
		MULTI=-DMULTI;;
	    NO)
		CXX=g++-4.6
		CC=g++-4.6;;
	esac;;
    FUJITSU)
	LIBS="-SSL2 "
	OPT="-Kfast -Ksimd=2 -O3 -Kdalign -Klib -Keval -Kprefetch_conditional -Kilfunc -Kparallel -Xg -Nlst "
	CRSS="--host --build "	

	case $PARALLEL in
	    YES)
		CXX=mpiFCCpx
		CC=mpifccpx
		MULTI=-DMULTI;;
	    NO)
		CXX=FCCpx
		CC=fccpx;;
	esac;;
    INTEL)
	LIBS=-mkl
#LIBS="-lmkl=sequential"
	OPT="-O2"
#DEBUG="-g -CU -CB"
	
	case $PARALLEL in
	    YES)
		CXX=mpicxx  #$MPIDIR/mpiCC
		CC=mpicxx  #$MPIDIR/mpiCC
		MULTI=-DMULTI;;
	    NO)
		CXX=icpc
		CC=icpc;;
	esac;;

esac



CPPFLAGS="${OPT} ${DEB} ${NORM} ${MONITOR} ${CHAINJOB} ${GRAPHIC} ${MULTI} ${PAPI} ${CPLADIR}" # ${RNDPATH}"
CXXFLAGS="${OPT} ${DEBUG} ${CPPFLAGS} ${CPLADIR} ${PROF} ${PAPIDIR}" # ${RNDPATH}"



LIBDIR=$PWD/lib
INCDIR=$PWD/src/inc

HEADER=${INCDIR}/simtype.h

echo "#include <My_rdm.${RNDNAME}.h>" > $HEADER

if [ ${ANNEAL} = "YES" ]; then
    echo "#define Annealing" >> $HEADER
fi

#cp ${LIBDIR}/libwrm_${RNDNAME}.a ${LIBDIR}/libwrm.a


LDFLAGS=-L${LIBDIR} -lwrm
LINPATH=-I$LIBDIR
INCPATH=-I$INCDIR
RNDPATH=-I${RNDPATH}

# +++ option summary +++
echo 
echo "++++++ option summary ++++++"
echo "CC       = $CC"                     #C compiler command
echo "CXX      = $CXX"                    #C++ compiler command
echo "CXXFLAGS = $CXXFLAGS"               #C++ compiler flags
echo "CPPFLAGS = $CPPFLAGS"               #Preprocessor flags
echo "LDFLAGS  = $LDFLAGS"                #Linker flags
echo "LIBS     = $LIBS"                   #Libraries
echo "INSTALL DIRECTORY = $INSTALL_DIR"   #installation directory
echo "RND = $RNDNAME" 
echo "++++++ option summary ++++++"
echo 

# +++ option summary +++
echo $INSTALL_DIR

# +++  configure +++
./configure $CRSS \
   --prefix="${INSTALL_DIR}" \
   LIBS="${LIBS}" \
   CC=${CC} \
   CXX=${CXX} \
   CPPFLAGS="${CPPFLAGS}" \
   CXXFLAGS="${CXXFLAGS}" \
   LDFLAGS="${LDFLAGS}"
   RNDPATH=${RNDPATH}
   INCPATH=${INCPATH}
# +++  configure +++
